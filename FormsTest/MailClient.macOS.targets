<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <UseHardenedRuntime>true</UseHardenedRuntime>
    <CodesignEntitlements>Entitlements.plist</CodesignEntitlements>
    <OutputType>Exe</OutputType>
    <RuntimeIdentifiers Condition="'$(RuntimeIdentifiers)' == ''">osx-x64;osx-arm64</RuntimeIdentifiers>
    <DefineConstants>$(DefineConstants);NO_DESIGNER</DefineConstants>
    <!-- <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsNotAsErrors>CA1416;BI1234</WarningsNotAsErrors> -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Diagnostics.NETCore.Client" Version="0.2.257301" />
    <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent" Version="2.0.74" ExcludeAssets="native;build;buildTransitive" />
  </ItemGroup>

   <!-- Workaround for https://github.com/xamarin/xamarin-macios/issues/14522 -->
  <PropertyGroup>
    <_CodesignAppBundleDependsOn>$(_CodesignAppBundleDependsOn);FixCodeSignInput</_CodesignAppBundleDependsOn>
  </PropertyGroup>
  <Target Name="FixCodeSignInput">
    <ItemGroup>
      <_CodesignItemsUnfiltered Include="@(_CodesignItems)" />
      <_CodesignItems Remove="@(_CodesignItems)" />
    </ItemGroup>
    <RemoveDuplicates Inputs="@(_CodesignItemsUnfiltered)">
      <Output TaskParameter="Filtered" ItemName="_CodesignItems"/>
    </RemoveDuplicates>
  </Target>

  <PropertyGroup>
    <!-- <CreateAppBundleDependsOn>$(CreateAppBundleDependsOn);GenerateAssemblyNBGVVersionInfo;CollectIndexerInputs;BuildIndexer</CreateAppBundleDependsOn> -->
    <CreateAppBundleDependsOn>$(CreateAppBundleDependsOn);GenerateAssemblyNBGVVersionInfo</CreateAppBundleDependsOn>
    <MacExtensionsDir>$(ProjectDir)../../MacExtensions</MacExtensionsDir>
  </PropertyGroup>

  <Target Name="CollectIndexerInputs">
    <ItemGroup>
      <_IndexerInputs Include="$(ProjectDir)..\..\MacExtensions\**\*" />
      <_IndexerInputs Remove="$(ProjectDir)..\..\MacExtensions\bin\**\*" />
    </ItemGroup>
  </Target>

  <Target Name="BuildIndexer" Inputs="@(_IndexerInputs)" Outputs="$(AppBundleDir)/Contents/MonoBundle/libIndexer.dylib">
    <Message Text="Building Indexer" />
    <Exec Command='xcodebuild archive -scheme Indexer -project $(MacExtensionsDir)/Indexer/Indexer.xcodeproj -configuration "$(Configuration)" -archivePath "$(OutputPath)Indexer.xcarchive"' />
    <Exec Condition="'$(RuntimeIdentifier)' == 'osx-arm64'" Command='lipo -thin arm64 "$(OutputPath)Indexer.xcarchive/Products/usr/lib/libIndexer.dylib" -output "$(OutputPath)Indexer.xcarchive/Products/usr/lib/libIndexer.dylib"' />
    <Exec Condition="'$(RuntimeIdentifier)' == 'osx-x64'" Command='lipo -thin x86_64 "$(OutputPath)Indexer.xcarchive/Products/usr/lib/libIndexer.dylib" -output "$(OutputPath)Indexer.xcarchive/Products/usr/lib/libIndexer.dylib"' />
    <Exec Command='mkdir -p "$(AppBundleDir)/Contents/MonoBundle"' />
    <Exec Command='cp "$(OutputPath)Indexer.xcarchive/Products/usr/lib/libIndexer.dylib" "$(AppBundleDir)/Contents/MonoBundle"' />
  </Target>

  <!-- Installer package -->
  <Target Name="VerifyPkgProperties">
    <PropertyGroup>
      <ComponentName>$(Brand.Replace(' ', '-'))-Component</ComponentName>
      <BrandingPath>Branding\$(Brand.Replace(' ', '_'))\</BrandingPath>
    </PropertyGroup>
  </Target>
  <Target Name="PkgBuild" DependsOnTargets="VerifyPkgProperties">
    <PropertyGroup>
      <_ProductBuildSign Condition="'$(EnablePackageSigning)' == 'true'">--sign "$(PackageSigningKey)"</_ProductBuildSign>
      <_ProductBuildSign Condition="'$(EnablePackageSigning)' != 'true'"></_ProductBuildSign>
    </PropertyGroup>
    <Exec Command='mkdir -p "$(ProjectDir)$(BrandingPath)Scripts"' />
    <Exec Command='chmod -R 755 "$(ProjectDir)$(BrandingPath)Scripts"' /> <!-- Fix shell script flags - necessary after editing in VS -->
    <Exec Command='chmod -R a+x "$(ProjectDir)$(BrandingPath)Scripts"' />
    <Exec Command='pkgbuild --identifier $(ApplicationId).pkg  --component "$(AppBundleDir)" "$(TargetDir)$(ComponentName).pkg" $(_ProductBuildSign) --install-location "/Applications" --scripts "$(ProjectDir)$(BrandingPath)Scripts"' />
  </Target>
  <Target Name="ProductBuild" DependsOnTargets="PkgBuild">
    <PropertyGroup>
      <_ProductBuildSign Condition="'$(EnablePackageSigning)' == 'true'">--sign "$(PackageSigningKey)"</_ProductBuildSign>
      <_ProductBuildSign Condition="'$(EnablePackageSigning)' != 'true'"></_ProductBuildSign>
    </PropertyGroup>
    <Exec Command='productbuild --distribution "$(ProjectDir)$(BrandingPath)Distribution.xml" --package-path "$(TargetDir)" --resources "$(MSBuildThisFileDirectory)../Localization/en/" "$(TargetDir)$(ApplicationTitle).pkg" $(_ProductBuildSign)' />
  </Target>
  <Target Name="DeletePkgArtifacts" DependsOnTargets="ProductBuild">
    <Exec Command='rm "$(TargetDir)$(ComponentName).pkg"' />
  </Target>
  <Target Name="CreateInstaller" DependsOnTargets="Build;VerifyPkgProperties;PkgBuild;ProductBuild;DeletePkgArtifacts" />

</Project>
