<Type Name="Dlfcn" FullName="MonoMac.ObjCRuntime.Dlfcn">
  <TypeSignature Language="C#" Value="public static class Dlfcn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Dlfcn extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides access to the dynamic linker</summary>
    <remarks>
      <para>

	The methods in this class are used to access the iOS/OSX
	dynamic linker.  You can use the methods in this class to get
	a handle to native shared libraries and looking up public
	symbols from them as well as looking up constants defined in a
	dynamic library.

      </para>
      <para> You can use dlopen to bring a library into memory and
	dlclose to close the library and dlerror to diagnose problems
	with calls to dlopen.
      </para>
      <para>
	There are various methods exposed to look up constants from libraries (GetDouble, GetFloat, GetIndirect, GetInt32, GetIntPtr, GetNSNumber, GetStringConstant).
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="dlclose">
      <MemberSignature Language="C#" Value="public static int dlclose (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/usr/lib/libSystem.dylib&quot; as &quot;dlclose&quot; winapi)int32 dlclose(native int handle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Handle previously returned by dlopen</param>
        <summary>Closes and unloads the native shared library referenced by the handle.</summary>
        <returns>A Unix error code, or zero on success.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="dlerror">
      <MemberSignature Language="C#" Value="public static string dlerror ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string dlerror() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a diagnostics message for the last failure when using any of the methods in this class.</summary>
        <returns>Human-readable message.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="dlopen">
      <MemberSignature Language="C#" Value="public static IntPtr dlopen (string path, int mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/usr/lib/libSystem.dylib&quot; as &quot;dlopen&quot; winapi)native int dlopen(string path, int32 mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">Path to the dynamic library.</param>
        <param name="mode">Bitmask, values defined in the Unix dlopen(2) man page.</param>
        <summary>Loads the specified dynamic library into memory. </summary>
        <returns>The handle to the library, or IntPtr.Zero on failure.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="dlsym">
      <MemberSignature Language="C#" Value="public static IntPtr dlsym (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/usr/lib/libSystem.dylib&quot; as &quot;dlsym&quot; winapi)native int dlsym(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Returns the address of the specified symbol in the dynamic library.</summary>
        <returns>
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static double GetDouble (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetDouble(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets the double value exposed with the given symbol from the dynamic library.</summary>
        <returns>The value from the library.</returns>
        <remarks>This routine silently fails and returns the default value for double.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static float GetFloat (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetFloat(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets the float value exposed with the given symbol from the dynamic library.</summary>
        <returns>The value from the library.</returns>
        <remarks>This routine silently fails and returns the default value for float.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndirect">
      <MemberSignature Language="C#" Value="public static IntPtr GetIndirect (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIndirect(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets the pointer in memory to the specified symbol.</summary>
        <returns>The value from the library, or IntPtr.Zero on failure.</returns>
        <remarks>Use this to get a generic pointer to a public symbol in the library.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public static int GetInt32 (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetInt32(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets the Int32 value exposed with the given symbol from the dynamic library.</summary>
        <returns>The value from the library.</returns>
        <remarks>This routine silently fails and returns zero.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public static long GetInt64 (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetInt64(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetIntPtr (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIntPtr(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets the IntPtr value exposed with the given symbol from the dynamic library.</summary>
        <returns>The value from the library.</returns>
        <remarks>This routine silently fails and returns IntPtr.Zero.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNSNumber">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSNumber GetNSNumber (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoMac.Foundation.NSNumber GetNSNumber(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets an NSNumber value exposed with the given symbol from the dynamic library.</summary>
        <returns>The NSNumer value from the library, or null on error.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSizeF">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetSizeF (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetSizeF(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringConstant">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString GetStringConstant (IntPtr handle, string symbol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoMac.Foundation.NSString GetStringConstant(native int handle, string symbol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle">Handle to the dynamic library previously opened with dlopen.</param>
        <param name="symbol">Name of the public symbol in the dynamic library to look up.</param>
        <summary>Gets the NSString value exposed with the given symbol from the dynamic library.</summary>
        <returns>The value from the library, or null on error.</returns>
        <remarks>This routine silently fails and returns the default value for stringconstant.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDouble">
      <MemberSignature Language="C#" Value="public static void SetDouble (IntPtr handle, string symbol, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDouble(native int handle, string symbol, float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFloat">
      <MemberSignature Language="C#" Value="public static void SetFloat (IntPtr handle, string symbol, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFloat(native int handle, string symbol, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInt32">
      <MemberSignature Language="C#" Value="public static void SetInt32 (IntPtr handle, string symbol, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInt32(native int handle, string symbol, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInt64">
      <MemberSignature Language="C#" Value="public static void SetInt64 (IntPtr handle, string symbol, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInt64(native int handle, string symbol, int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIntPtr">
      <MemberSignature Language="C#" Value="public static void SetIntPtr (IntPtr handle, string symbol, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIntPtr(native int handle, string symbol, native int value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSizeF">
      <MemberSignature Language="C#" Value="public static void SetSizeF (IntPtr handle, string symbol, System.Drawing.SizeF value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSizeF(native int handle, string symbol, valuetype System.Drawing.SizeF value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="symbol" Type="System.String" />
        <Parameter Name="value" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <param name="symbol">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
