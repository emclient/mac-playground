<Type Name="NSHttpCookie" FullName="MonoMac.Foundation.NSHttpCookie">
  <TypeSignature Language="C#" Value="public class NSHttpCookie : MonoMac.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NSHttpCookie extends MonoMac.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSHTTPCookie", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>HTTP Cookie</summary>
    <remarks>
      <para>

	To instantiate instances of NSHTTPCookie you need to pass an
	NSDictionary to either the NSHttpCookie constructor or the
	<see cref="M:MonoMac.Foundation.NSHttpCookie.CookieFromProperties" />
	method.
      </para>
      <para>

	The actual keys have to be one the public Key static fields
	from this class (<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyName" />, <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyValue" />, <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyOriginURL" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyVersion" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyDomain" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyPath" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeySecure" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyExpires" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyComment" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyCommentURL" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyDiscard" />,
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyMaximumAge" /> and
	<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyPort" />).
      </para>
      <example>
        <code lang="c#">

	  var properties = NSDictionary.FromObjectsAndKeys (new object [] { "MyCookieValue" }, new object [] { NSHttpCookie.KeyValue });
	  var cookie = new NSHttpCookie (properties);

	</code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (MonoMac.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (MonoMac.Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSDictionary properties) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithProperties:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="properties" Type="MonoMac.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Dictionary with the cookie values.</param>
        <summary>Creates a new NSHttpCookie</summary>
        <remarks>
          <para>

	    To instantiate instances of NSHTTPCookie you need to pass an
	    NSDictionary 
	  </para>
          <para>
	    
	    The actual keys have to be one the public Key static
	    fields from this class (<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyName" />, <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyValue" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyOriginURL" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyVersion" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyDomain" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyPath" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeySecure" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyExpires" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyComment" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyCommentURL" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyDiscard" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyMaximumAge" />
	    and <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyPort" />).

	    </para>
          <example>
            <code lang="c#">
	      
var properties = NSDictionary.FromObjectsAndKeys (new object [] { "MyCookieValue" }, new object [] { NSHttpCookie.KeyValue });
var cookie = new NSHttpCookie (properties);
	      
	    </code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (System.Net.Cookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Cookie cookie) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cookie" Type="System.Net.Cookie" />
      </Parameters>
      <Docs>
        <param name="cookie">An existing Cookie from the .NET framework</param>
        <summary>Create a new cookie from the supplied System.Net.Cookie instance properties</summary>
        <remarks>This constructor will throw an ArgumentNullException if `cookie` is null</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie's name. Cannot be null.</param>
        <param name="value">Cookie's value. Cannot be null.</param>
        <summary>Create a new cookie with the supplied name and value.</summary>
        <remarks>A default Path and Domain will be used to ensure a valid instance is created.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (string name, string value, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value, string path) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie's name. Cannot be null.</param>
        <param name="value">Cookie's value. Cannot be null.</param>
        <param name="path">Path where the cookie will be applied on the domain. Using "/" will send the cookie to every URL on the domain.</param>
        <summary>Create a new cookie with the supplied name, value and path.</summary>
        <remarks>A default Domain will be used to ensure a valid instance is created</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSHttpCookie (string name, string value, string path, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value, string path, string domain) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cookie's name. Cannot be null.</param>
        <param name="value">Cookie's value. Cannot be null.</param>
        <param name="path">Path where the cookie will be applied on the domain. Using "/" will send the cookie to every URL on the domain.</param>
        <param name="domain">Domain (e.g. xamarin.com) related to the cookie</param>
        <summary>Create a new cookie with the supplied name, value, path and domain.</summary>
        <remarks>An ArgumentNullException will be thrown if either `name` or `value` are null.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoMac class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("comment")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentUrl">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSUrl CommentUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSUrl CommentUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("commentURL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSUrl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieFromProperties">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSHttpCookie CookieFromProperties (MonoMac.Foundation.NSDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoMac.Foundation.NSHttpCookie CookieFromProperties(class MonoMac.Foundation.NSDictionary properties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("cookieWithProperties:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSHttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="MonoMac.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Dictionary with the cookie values.</param>
        <summary>Factory method to create cookies.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>

	    To instantiate instances of NSHTTPCookie you need to pass an
	    NSDictionary 
	  </para>
          <para>
	    
	    The actual keys have to be one the public Key static
	    fields from this class (<see cref="F:MonoMac.Foundation.NSHttpCookie.KeyName" />, <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyValue" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyOriginURL" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyVersion" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyDomain" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyPath" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeySecure" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyExpires" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyComment" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyCommentURL" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyDiscard" />,
	    <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyMaximumAge" />
	    and <see cref="F:MonoMac.Foundation.NSHttpCookie.KeyPort" />).

	    </para>
          <example>
            <code lang="c#">
	      
var properties = NSDictionary.FromObjectsAndKeys (new object [] { "MyCookieValue" }, new object [] { NSHttpCookie.KeyValue });
var cookie = new NSHttpCookie (properties);
	      
	    </code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesWithResponseHeaderFields">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSHttpCookie[] CookiesWithResponseHeaderFields (MonoMac.Foundation.NSDictionary headerFields, MonoMac.Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoMac.Foundation.NSHttpCookie[] CookiesWithResponseHeaderFields(class MonoMac.Foundation.NSDictionary headerFields, class MonoMac.Foundation.NSUrl url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("cookiesWithResponseHeaderFields:forURL:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSHttpCookie[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerFields" Type="MonoMac.Foundation.NSDictionary" />
        <Parameter Name="url" Type="MonoMac.Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="headerFields">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the NSHttpCookie object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the NSHttpCookie class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposting <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when you are finished using the NSHttpCookie ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("domain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresDate">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDate ExpiresDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSDate ExpiresDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("expiresDate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHttpOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsHttpOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isHTTPOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isSecure")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSessionOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsSessionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSessionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isSessionOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyComment">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyComment;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyComment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyCommentURL">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyCommentURL;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyCommentURL" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDiscard">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyDiscard;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyDiscard" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDomain">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyDomain;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyDomain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpires">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyExpires;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyExpires" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyMaximumAge">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyMaximumAge;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyMaximumAge" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyName">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyOriginURL">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyOriginURL;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyOriginURL" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPath">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyPath;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPort">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySecure">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeySecure;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeySecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVersion">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSString KeyVersion;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoMac.Foundation.NSString KeyVersion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("path")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortList">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSNumber[] PortList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSNumber[] PortList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("portList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSNumber[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSDictionary Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderFieldsWithCookies">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSDictionary RequestHeaderFieldsWithCookies (MonoMac.Foundation.NSHttpCookie[] cookies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoMac.Foundation.NSDictionary RequestHeaderFieldsWithCookies(class MonoMac.Foundation.NSHttpCookie[] cookies) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("requestHeaderFieldsWithCookies:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookies" Type="MonoMac.Foundation.NSHttpCookie[]" />
      </Parameters>
      <Docs>
        <param name="cookies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("value")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public virtual uint Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("version")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
